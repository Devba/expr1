<!DOCTYPE html>
<html>
  <head>
    
    <title>Hive Keychain</title>
  </head>

  <body>
    <h3>Handshake</h3>
    <button id="sw-handshake">Send handshake</button>
    <h3>Decode memo</h3>
    <input
      type="text"
      placeholder="username"
      id="decode_user"
      value="stoodkev"
    />
    <select id="decode_method">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input
      type="text"
      id="decode_message"
      placeholder="message"
      value="#AxhLDHagit9exL1ZuADKjzDFpe5G9vJJfjRyxtY7VELbNRJ954Up1VfwL1qrEWXu8f2EeLvKmJ9AB8xqAsntGS1BV42gRS298vjCHBQ2hnZi2faLW7bVgzSWQRtX65fJZ"
    />
    <button id="send_decode">Send</button>
    <h3>Encode memo</h3>
    <input
      type="text"
      placeholder="username"
      id="encode_user"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="receiver"
      id="encode_receiver"
      value="lecaillon"
    />
    <select id="encode_method">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input type="text" id="encode_message" placeholder="message" value="#hi" />
    <button id="send_encode">Send</button>
    <h3>Multisig Encode memo</h3>
    <input
      type="text"
      placeholder="username"
      id="encode_user_multisig"
      value="cedricguillas"
    />
    <input
      type="text"
      placeholder="public keys"
      id="encode_public_keys_multisig"
      value="STM8f7xEdcUsyTUsERwYZCiyFdi5ySGUo7wVJS6B6B4TXA7dGdnpX,STM7s8Ww49SwkCspGJEsq7r9jGYP9kgnmKCwhbkjSzR6wYNij9XBq"
    />
    <select id="encode_method_multisig">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input
      type="text"
      id="encode_message_multisig"
      placeholder="message"
      value="#hi"
    />
    <button id="send_encode_multisig">Send</button>
    <h3>Post</h3>
    <input
      type="text"
      placeholder="username"
      id="post_username"
      value="lecaillon"
    />
    <input type="text" placeholder="title" id="post_title" value="test" />
    <input type="text" placeholder="permlink" id="post_perm" value="test" />
    <input type="text" placeholder="body" id="post_body" value="test" />
    <input
      type="text"
      placeholder="json_metadata"
      id="post_json"
      value="{'test':'test'}"
    />
    <input type="text" placeholder="parent_username" id="post_pu" />
    <input type="text" placeholder="parent_perm" id="post_pp" value="test" />
    <input type="text" placeholder="Comment options" id="comment_options" />
    <button id="send_post">Send</button>
    <h3>Vote</h3>
    <input
      type="text"
      placeholder="username"
      id="vote_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="author"
      id="vote_author"
      value="lecaillon"
    />
    <input type="text" placeholder="permlink" id="vote_perm" value="test" />
    <input type="number" placeholder="weight" id="vote_weight" value="100" />
    <input type="text" placeholder="permlink" id="vote_rpc" value="" />
    <button id="send_vote">Send</button>
    <h3>Custom_JSON</h3>
    <input
      type="text"
      placeholder="message"
      id="custom_message"
      value="Test message"
    />
    <input
      type="text"
      placeholder="username"
      id="custom_username"
      value="keychain-ledger"
    />
    <select id="custom_method">
      <option>Active</option>
      <option>Posting</option>
    </select>
    <input type="text" placeholder="id" id="custom_id" value="custom" />
    <input
      type="text"
      placeholder="custom_json"
      id="custom_json"
      value='{"hive":"keychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychainkeychain"}'
    />
    <input type="text" placeholder="rpc" id="custom_rpc" />
    <button id="send_custom">Send</button>
    <h3>Transfer</h3>
    <input
      type="text"
      placeholder="username"
      id="transfer_username"
      value="cedricguillas"
    />
    <input
      type="text"
      placeholder="to"
      id="transfer_to"
      value="cedric.tests2"
    />
    <input type="text" placeholder="memo" id="transfer_memo" value="#hi" />
    <input type="number" placeholder="0.000" id="transfer_val" value="0.001" />
    <input type="checkbox" id="transfer_enforce" /><label for="transfer_enforce"
      >Enforce username</label
    >
    <select id="transfer_currency">
      <option>HIVE</option>
      <option>HBD</option>
    </select>
    <button id="send_tra">Send</button>
    <h3>Sign message</h3>
    <input
      type="text"
      placeholder="username"
      id="sign_username"
      value="stoodkev"
    />
    <input type="text" placeholder="message" id="sign_message" value="test" />
    <select id="sign_method">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input type="text" placeholder="message" id="sign_message_title" />
    <button id="send_signature">Send</button>
    <h3>Add Account Authority</h3>
    <input
      type="text"
      placeholder="username"
      id="addauth_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="authorized_username"
      id="addauth_authorized_username"
      value="lecaillon"
    />
    <select id="addauth_role">
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input type="number" placeholder="1" id="addauth_weight" value="1" />
    <button id="send_addauth">Send</button>
    <h3>Remove Account Authority</h3>
    <input
      type="text"
      placeholder="username"
      id="removeauth_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="authorized_username"
      id="removeauth_authorized_username"
      value="lecaillon"
    />
    <select id="removeauth_role">
      <option>Posting</option>
      <option>Active</option>
    </select>
    <button id="send_removeauth">Send</button>
    <h3>Add Key Authority</h3>
    <input
      type="text"
      placeholder="username"
      id="addkey_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="authorized_key"
      id="addkey_authorized_key"
      value="STM..."
    />
    <select id="addkey_role">
      <option>Posting</option>
      <option>Active</option>
    </select>
    <input type="number" placeholder="1" id="addkey_weight" />
    <button id="send_addkey">Send</button>
    <h3>Remove Key Authority</h3>
    <input
      type="text"
      placeholder="username"
      id="removekey_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="authorized_key"
      id="removekey_authorized_key"
      value="STM..."
    />
    <select id="removekey_role">
      <option>Posting</option>
      <option>Active</option>
    </select>
    <button id="send_removekey">Send</button>
    <h3>Broadcast</h3>
    <input type="text" placeholder="username" id="broadcast_username" />
    <input
      type="text"
      placeholder="operations"
      id="broadcast_operations"
      value=""
    />
    <!--  [     [       "transfer",       { "from": "stoodkev", "to": "lecaillon", "amount": "0.002 HIVE", "memo": "#hii" }    ]   ]-->
    <select id="broadcast_method">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <button id="send_broadcast">Send</button>
    <h3>Broadcast Create New claimed account</h3>
    <input
      type="text"
      placeholder="username"
      id="create_claimed_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="new_username"
      id="create_claimed_new_username"
      value="new"
    />
    <input
      type="text"
      placeholder="owner"
      id="create_claimed_owner"
      value='{"weight_threshold": 1,"account_auths": [],"key_auths":[["STM6M7zSahc4jEhQ8SR5ZZBufRuFS2Wx4pJZm6fbc8a5apbd1wnCG",1]]}'
    />
    <input
      type="text"
      placeholder="active"
      id="create_claimed_active"
      value='{"weight_threshold": 1,"account_auths": [],"key_auths":[["STM5MrUhAJ5jyBf7hY9NFJwNUpgbaK6ZU8haWRnxzfbvTnVo6MKb7",1]]}'
    />
    <input
      type="text"
      placeholder="posting"
      id="create_claimed_posting"
      value='{"weight_threshold": 1,"account_auths": [],"key_auths":[["STM7hZtpBMRi3wJpyGWnyMUT2MBW7ggkfL7E7juwr5YSUsxMwk3RY",1]]}'
    />
    <input
      type="text"
      placeholder="memo"
      id="create_claimed_memo"
      value="STM6BnC2ceS5Z83kHbvBMyCRwvFMxvNdTGEG2YweDcYgWgnLCoQtZ"
    />
    <button id="send_create_claimed">Send</button>
    <h3>Signed Call</h3>
    <input
      type="text"
      placeholder="username"
      id="signed_call_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="method"
      id="signed_call_method"
      value="call"
    />
    <input
      type="text"
      placeholder="params"
      id="signed_call_params"
      value='{"params":"..."}'
    />
    <select id="signed_call_key_type">
      <option>Memo</option>
      <option>Posting</option>
      <option>Active</option>
    </select>
    <button id="send_signed_call">Send</button>
    <h3>SignTx</h3>
    <input
      type="text"
      placeholder="username"
      id="tx_username"
      value="stoodkev"
    />
    <input type="text" placeholder="tx" id="tx" value='{"test":"hi"}' />
    <select id="tx_type">
      <option>Posting</option>
      <option>Active</option>
    </select>
    <button id="send_sign_tx">Send</button>
    <h3>Delegate</h3>
    <input
      type="text"
      placeholder="username"
      id="delegation_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="delegatee"
      id="delegation_delegatee"
      value="lecaillon"
    />
    <input type="number" placeholder="HP" id="delegation_sp" value="10.000" />
    <select id="delegation_unit">
      <option>HP</option>
      <option>VESTS</option>
    </select>
    <button id="send_delegation">Send</button>
    <h3>Send Tokens</h3>
    <input
      type="text"
      placeholder="username"
      id="tokens_username"
      value="cedric.tests"
    />
    <input type="text" placeholder="to" id="tokens_to" value="cedricguillas" />
    <input type="number" placeholder="1.000" id="tokens_qt" value="1.000" />
    <input type="text" placeholder="tokens" id="tokens_unit" value="WAIV" />
    <input type="text" placeholder="memo" id="tokens_memo" value="" />
    <button id="sendTokens">Send</button>
    <h3>Witness</h3>
    <input
      type="text"
      placeholder="username"
      id="witness_username"
      value="cedric.tests"
    />
    <input type="text" placeholder="username" id="witness" value="stoodkev" />
    <input type="checkbox" id="vote_wit" /><label for="vote_wit"
      >Vote for this witness</label
    >
    <button id="send_witness_vote">Send</button>
    <h3>Proxy</h3>
    <input
      type="text"
      placeholder="username"
      id="proxy_username"
      value="keychain-ledger"
    />
    <input type="text" placeholder="username" id="proxy" value="stoodkev" />
    <button id="send_proxy">Send</button>
    <h3>Power Up</h3>
    <input
      type="text"
      placeholder="username"
      id="pu_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="recipient"
      id="pu_recipient"
      value="stoodkev"
    />
    <input type="number" placeholder="steem" id="pu_steem" value="1.000" />
    <button id="send_pu">Send</button>
    <h3>Power Down</h3>
    <input
      type="text"
      placeholder="username"
      id="pd_username"
      value="stoodkev"
    />
    <input type="number" placeholder="hp" id="pd_sp" value="1.000" />
    <button id="send_pd">Send</button>
    <h3>Create Proposal</h3>
    <input
      type="text"
      placeholder="username"
      id="cp_username"
      value="lecaillon"
    />
    <input
      type="text"
      placeholder="receiver"
      id="cp_receiver"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="start_date"
      id="cp_start"
      value="2022-09-01T00:00:00"
    />
    <input
      type="text"
      placeholder="end_date"
      id="cp_end"
      value="2022-10-01T00:00:00"
    />
    <input
      type="text"
      placeholder="daily pay"
      id="cp_daily_pay"
      value="1.000 HBD"
    />
    <input
      type="text"
      placeholder="subject"
      id="cp_subject"
      value="My proposal"
    />
    <input type="text" placeholder="extensions" id="cp_extensions" value="[]" />
    <input
      type="text"
      placeholder="permlink"
      id="cp_permlink"
      value="witness-update"
    />
    <button id="send_cp">Send</button>
    <h3>Remove Proposal</h3>
    <input
      type="text"
      placeholder="username"
      id="rp_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="proposal_ids"
      id="rp_proposal_ids"
      value="[7]"
    />
    <input type="text" placeholder="extensions" id="rp_extensions" value="[]" />
    <button id="send_rp">Send</button>
    <h3>Update proposal votes</h3>
    <input
      type="text"
      placeholder="username"
      id="vp_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="proposal_ids"
      id="vp_proposal_ids"
      value="[7]"
    />
    <input type="checkbox" id="vp_approve" /><label for="vp_approve"
      >Approve</label
    >
    <input type="text" placeholder="extensions" id="vp_extensions" value="[]" />
    <button id="send_vp">Send</button>
    <h3>Convert</h3>
    <input
      type="text"
      placeholder="username"
      id="con_username"
      value="stoodkev"
    />
    <input
      type="text"
      placeholder="proposal_ids"
      id="con_amount"
      value="1.000"
    />
    <input type="checkbox" id="con_collaterized" /><label for="con_collaterized"
      >Collaterized</label
    >
    <button id="send_con">Send</button>
    <h3>Recurrent transfers</h3>
    <input
      type="text"
      placeholder="username"
      id="rec_username"
      value="cedric.tests"
    />
    <input type="text" placeholder="to" id="rec_to" value="cedricguillas" />
    <input type="text" placeholder="amount" id="rec_amount" value="0.001" />
    <select id="rec_currency">
      <option selected="selected">HIVE</option>
      <option>HBD</option>
      <option>TESTS</option>
      <option>TBD</option>
    </select>
    <input type="text" placeholder="memo" id="rec_memo" value="" />
    <input
      type="number"
      placeholder="recurrence"
      id="rec_recurrence"
      value="24"
    /><input type="number" placeholder="executions" id="rec_ex" value="2" />
    <button id="send_rec">Send</button>
    <h3>Save account to keychain</h3>
    <input
      type="text"
      placeholder="username"
      id="save_username"
      value="stoodkev"
    />
    <input type="text" id="save_keys" value='{"posting":"..."}' />
    <button id="send_save">Send</button>

    
    <h3>Save account to keychain</h3>
    <button id="sw-verkey">Send</button>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="/hive/keychain/main.js?v=a"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

// Send Handshake event

$('#sw-verkey').click(function () {
const keychain = window.hive_keychain;
keychain.requestVerifyKey('elsurtidor', "xxx", 'Posting', (response) => {
  if (response.success === true) {
    const decodedMessage = response.result;
    console.log(decodedMessage)
  }
  else {
    console.log("jkjk")
  }
    });
  });


$('#sw-handshake').click(function () {
    hive_keychain.requestHandshake(function () {
      console.log('Handshake received!');
    });
  });
  
  // All transactions are sent via a swRequest event.
  
  // Send decryption request
  $('#send_decode').click(function () {
    hive_keychain.requestVerifyKey(
      $('#decode_user').val(),
      $('#decode_message').val(),
      $('#decode_method option:selected').text(),
      function (response) {
        console.log('main js response - verify key');
        console.log(response);
      },
    );
  });
  
  $('#send_encode').click(() => {
    hive_keychain.requestEncodeMessage(
      $('#encode_user').val(),
      $('#encode_receiver').val(),
      $('#encode_message').val(),
      $('#encode_method option:selected').text(),
      function (response) {
        console.log('main js response - verify key');
        console.log(response);
      },
    );
  });
  $('#send_encode_multisig').click(() => {
    hive_keychain.requestEncodeWithKeys(
      $('#encode_user_multisig').val(),
      $('#encode_public_keys_multisig').val().split(','),
      $('#encode_message_multisig').val(),
      $('#encode_method_multisig option:selected').text(),
      function (response) {
        console.log('main js response - verify key');
        console.log(response);
      },
    );
  });
  
  // Send post request
  $('#send_post').click(function () {
    hive_keychain.requestPost(
      $('#post_username').val(),
      $('#post_title').val(),
      $('#post_body').val(),
      $('#post_pp').val(),
      $('#post_pu').val().length ? $('#post_pu').val() : null,
      $('#post_json').val(),
      $('#post_perm').val(),
      $('#comment_options').val().length
        ? $('#comment_options').val()
        : undefined,
      function (response) {
        console.log('main js response - post');
        console.log(response);
      },
    );
  });
  
  // Send vote request
  $('#send_vote').click(function () {
    hive_keychain.requestVote(
      $('#vote_username').val(),
      $('#vote_perm').val(),
      $('#vote_author').val(),
      $('#vote_weight').val(),
      function (response) {
        console.log('main js response - vote');
        console.log(response);
      },
      $('#vote_rpc').val().length ? $('#vote_rpc').val() : undefined,
    );
  });
  
  // Send Custom JSON request
  $('#send_custom').click(function () {
    console.log('click');
    hive_keychain.requestCustomJson(
      $('#custom_username').val(),
      $('#custom_id').val(),
      $('#custom_method option:selected').text(),
      $('#custom_json').val(),
      $('#custom_message').val(),
      function (response) {
        console.log('main js response - custom JSON');
        console.log(response);
      },
      $('#custom_rpc').val().length ? $('#custom_rpc').val() : undefined,
    );
  });
  
  // Send transfer request
  $('#send_tra').click(function () {
    console.log('transfer');
    hive_keychain.requestTransfer(
      $('#transfer_username').val().length ? $('#transfer_username').val() : null,
      $('#transfer_to').val(),
      $('#transfer_val').val(),
      $('#transfer_memo').val(),
      $('#transfer_currency option:selected').text(),
      function (response) {
        console.log('main js response - transfer');
        console.log(response);
      },
      $('#transfer_enforce').is(':checked'),
    );
  });
  
  // Send tokens request
  $('#sendTokens').click(function () {
    hive_keychain.requestSendToken(
      $('#tokens_username').val(),
      $('#tokens_to').val(),
      $('#tokens_qt').val(),
      $('#tokens_memo').val(),
      $('#tokens_unit').val(),
      function (response) {
        console.log('main js response - tokens');
        console.log(response);
      },
    );
  });
  
  // Send delegation
  $('#send_delegation').click(function () {
    hive_keychain.requestDelegation(
      $('#delegation_username').val().length
        ? $('#delegation_username').val()
        : undefined,
      $('#delegation_delegatee').val(),
      $('#delegation_sp').val(),
      $('#delegation_unit option:selected').text(),
      function (response) {
        console.log('main js response - delegation');
        console.log(response);
      },
    );
  });
  
  $('#send_signature').click(function () {
    hive_keychain.requestSignBuffer(
      $('#sign_username').val().length ? $('#sign_username').val() : null,
      $('#sign_message').val(),
      $('#sign_method option:selected').text(),
      function (response) {
        console.log('main js response - sign');
        console.log(response);
      },
      null,
      $('#sign_message_title').val().length
        ? $('#sign_message_title').val()
        : null,
    );
  });
  
  $('#send_sign_tx').click(function () {
    hive_keychain.requestSignTx(
      $('#tx_username').val(),
      JSON.parse($('#tx').val()),
      $('#tx_type option:selected').text(),
      function (response) {
        console.log('main js response - tx');
        console.log(response);
      },
    );
  });
  
  $('#send_addauth').click(function () {
    hive_keychain.requestAddAccountAuthority(
      $('#addauth_username').val(),
      $('#addauth_authorized_username').val(),
      $('#addauth_role option:selected').text(),
      $('#addauth_weight').val(),
      function (response) {
        console.log('main js response - add auth');
        console.log(response);
      },
    );
  });
  
  $('#send_removeauth').click(function () {
    hive_keychain.requestRemoveAccountAuthority(
      $('#removeauth_username').val(),
      $('#removeauth_authorized_username').val(),
      $('#removeauth_role option:selected').text(),
      function (response) {
        console.log('main js response - remove auth');
        console.log(response);
      },
    );
  });
  
  $('#send_addkey').click(function () {
    console.log('add key');
    hive_keychain.requestAddKeyAuthority(
      $('#addkey_username').val(),
      $('#addkey_authorized_key').val(),
      $('#addkey_role option:selected').text(),
      $('#addkey_weight').val(),
      function (response) {
        console.log('main js response - add auth key');
        console.log(response);
      },
    );
  });
  
  $('#send_removekey').click(function () {
    hive_keychain.requestRemoveKeyAuthority(
      $('#removekey_username').val(),
      $('#removekey_authorized_key').val(),
      $('#removekey_role option:selected').text(),
      function (response) {
        console.log('main js response - remove auth key');
        console.log(response);
      },
    );
  });
  
  $('#send_broadcast').click(function () {
    hive_keychain.requestBroadcast(
      $('#broadcast_username').val(),
      JSON.parse($('#broadcast_operations').val()),
      $('#broadcast_method option:selected').text(),
      function (response) {
        console.log('main js response - broadcast');
        console.log(response);
      },
    );
  });
  
  $('#send_signed_call').click(function () {
    hive_keychain.requestSignedCall(
      $('#signed_call_username').val(),
      $('#signed_call_method').val(),
      $('#signed_call_params').val(),
      $('#signed_call_key_type option:selected').text(),
      function (response) {
        console.log('main js response - signed call');
        console.log(response);
      },
    );
  });
  
  $('#send_witness_vote').click(function () {
    hive_keychain.requestWitnessVote(
      $('#witness_username').val().length
        ? $('#witness_username').val()
        : undefined,
      $('#witness').val(),
      $('#vote_wit').is(':checked'),
      function (response) {
        console.log('main js response - witness vote');
        console.log(response);
      },
    );
  });
  
  $('#send_proxy').click(function () {
    hive_keychain.requestProxy(
      $('#proxy_username').val().length ? $('#proxy_username').val() : undefined,
      $('#proxy').val() ? $('#proxy').val() : '',
      function (response) {
        console.log('main js response - proxy');
        console.log(response);
      },
    );
  });
  
  $('#send_pu').click(function () {
    hive_keychain.requestPowerUp(
      $('#pu_username').val(),
      $('#pu_recipient').val(),
      $('#pu_steem').val(),
      function (response) {
        console.log('main js response - power up');
        console.log(response);
      },
    );
  });
  
  $('#send_pd').click(function () {
    hive_keychain.requestPowerDown(
      $('#pd_username').val(),
      $('#pd_sp').val(),
      function (response) {
        console.log('main js response - power down');
        console.log(response);
      },
    );
  });
  
  $('#send_create_claimed').click(function () {
    hive_keychain.requestCreateClaimedAccount(
      $('#create_claimed_username').val(),
      $('#create_claimed_new_username').val(),
      $('#create_claimed_owner').val(),
      $('#create_claimed_active').val(),
      $('#create_claimed_posting').val(),
      $('#create_claimed_memo').val(),
      function (response) {
        console.log('main js response - create claimed account');
        console.log(response);
      },
    );
  });
  
  $('#send_cp').click(function () {
    hive_keychain.requestCreateProposal(
      $('#cp_username').val(),
      $('#cp_receiver').val(),
      $('#cp_subject').val(),
      $('#cp_permlink').val(),
      $('#cp_daily_pay').val(),
      $('#cp_start').val(),
      $('#cp_end').val(),
      $('#cp_extensions').val(),
      function (response) {
        console.log('main js response - create proposal');
        console.log(response);
      },
    );
  });
  
  $('#send_rp').click(function () {
    hive_keychain.requestRemoveProposal(
      $('#rp_username').val(),
      $('#rp_proposal_ids').val(),
      $('#cp_extensions').val(),
      function (response) {
        console.log('main js response - remove proposal');
        console.log(response);
      },
    );
  });
  
  $('#send_vp').click(function () {
    hive_keychain.requestUpdateProposalVote(
      $('#vp_username').val(),
      JSON.parse($('#vp_proposal_ids').val()),
      $('#vp_approve').is(':checked'),
      $('#vp_extensions').val(),
      function (response) {
        console.log('main js response - update proposal votes');
        console.log(response);
      },
    );
  });
  
  $('#send_save').click(function () {
    hive_keychain.requestAddAccount(
      $('#save_username').val(),
      JSON.parse($('#save_keys').val()),
      function (response) {
        console.log('main js response - account saved');
        console.log(response);
      },
    );
  });
  
  $('#send_con').click(function () {
    hive_keychain.requestConversion(
      $('#con_username').val(),
      $('#con_amount').val(),
      $('#con_collaterized').is(':checked'),
      function (response) {
        console.log('main js response - conversion');
        console.log(response);
      },
    );
  });
  
  $('#send_rec').click(function () {
    hive_keychain.requestRecurrentTransfer(
      $('#rec_username').val().length ? $('#rec_username').val() : null,
      $('#rec_to').val(),
      $('#rec_amount').val(),
      $('#rec_currency option:selected').text(),
      $('#rec_memo').val(),
      parseInt($('#rec_recurrence').val()),
      parseInt($('#rec_ex').val()),
      function (response) {
        console.log('main js response - recurrent transfer');
        console.log(response);
      },
    );
  });
  $( document ).ready(function() {
    console.log( "ready!" );
    if (typeof(hive_keychain)=='undefined')
  {Swal.fire("no hay hive")}


});
 
    

 


  
    </script>
  </body>
</html>